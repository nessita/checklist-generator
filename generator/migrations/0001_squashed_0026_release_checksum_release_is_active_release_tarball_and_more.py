# Generated by Django 6.0.dev20250313145606 on 2025-03-14 14:19

import datetime

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    replaces = [
        ("generator", "0001_initial"),
        ("generator", "0002_rename_other_cve_type_securityissue_other_type"),
        ("generator", "0003_securityissue_attack_type_securityissue_impact_and_more"),
        ("generator", "0004_securityrelease_affected_branches_and_more"),
        ("generator", "0005_featurerelease_alter_securityissue_description_and_more"),
        ("generator", "0006_alter_securityissue_reporter"),
        ("generator", "0007_releasecandidaterelease"),
        ("generator", "0008_rename_releases_securityrelease_versions_and_more"),
        (
            "generator",
            "0009_featurerelease_created_at_featurerelease_updated_at_and_more",
        ),
        ("generator", "0010_betarelease_is_lts_betarelease_verbose_version_and_more"),
        ("generator", "0011_bugfixrelease_alpharelease"),
        ("generator", "0012_remove_bugfixrelease_verbose_version_and_more"),
        (
            "generator",
            "0013_securityrelease_hashes_alter_securityissue_cve_type_and_more",
        ),
        ("generator", "0014_alter_securityrelease_hashes"),
        ("generator", "0015_securityissue_blogdescription_and_more"),
        (
            "generator",
            "0016_releaser_alpharelease_releaser_betarelease_releaser_and_more",
        ),
        ("generator", "0017_releaser_instead_of_who"),
        ("generator", "0018_remove_alpharelease_who_and_more"),
        ("generator", "0019_release_remove_alpharelease_is_lts_and_more"),
        ("generator", "0020_securityissue_commit_hash_main_and_more"),
        ("generator", "0021_remove_securityrelease_affected_branches_and_more"),
        ("generator", "0022_prerelease"),
        ("generator", "0023_remove_betarelease_feature_release_and_more"),
        ("generator", "0024_featurerelease_eol_release_and_more"),
        ("generator", "0025_alter_securityissue_release_and_more"),
        (
            "generator",
            "0026_release_checksum_release_is_active_release_tarball_and_more",
        ),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SecurityRelease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("when", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="FeatureRelease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("forum_post", models.URLField(blank=True)),
                (
                    "tagline",
                    models.CharField(
                        help_text="Filler to use in the sentence <i>Django [version] brings [tagline] which you can read about in the release notes.</i></br>For example: <i>Django 5.1 brings <strong>a kaleidoscope of improvements</strong></i>.",
                        max_length=4096,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "when",
                    models.DateTimeField(),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SecurityIssue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cve_year_number", models.CharField(max_length=1024, unique=True)),
                (
                    "cve_type",
                    models.CharField(
                        choices=[
                            ("Buffer Overflow", "Buffer Overflow"),
                            (
                                "Cross Site Request Forgery (CSRF)",
                                "Cross Site Request Forgery (CSRF)",
                            ),
                            (
                                "Cross Site Scripting (XSS)",
                                "Cross Site Scripting (XSS)",
                            ),
                            ("Directory Traversal", "Directory Traversal"),
                            ("Incorrect Access Control", "Incorrect Access Control"),
                            ("Insecure Permissions", "Insecure Permissions"),
                            ("Integer Overflow", "Integer Overflow"),
                            (
                                "Missing SSL Certificate Validation",
                                "Missing SSL Certificate Validation",
                            ),
                            ("SQL Injection", "SQL Injection"),
                            ("XML External Entity (XXE)", "XML External Entity (XXE)"),
                            ("Other or Unknown", "Other or Unknown"),
                        ],
                        default="Other or Unknown",
                        max_length=1024,
                    ),
                ),
                (
                    "other_type",
                    models.CharField(blank=True, default="DoS", max_length=1024),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("moderate", "Moderate"),
                            ("high", "High"),
                        ],
                        default="moderate",
                    ),
                ),
                ("summary", models.CharField(max_length=1024)),
                (
                    "description",
                    models.TextField(
                        help_text="Written in present tense.\n==> Do not include versions, these will be prepended automatically. <==\n\nCVE documented format suggestions:\n\n<pre>\n    •[VULNTYPE] in [COMPONENT] in [VENDOR] [PRODUCT] [VERSION] allows\n    [ATTACKER] to [IMPACT] via [VECTOR].\n\n    •[COMPONENT] in [VENDOR] [PRODUCT] [VERSION] [ROOT CAUSE], which allows\n    [ATTACKER] to [IMPACT] via [VECTOR]\n</pre>\n\nExamples:\n<pre>\n    The password hasher in contrib/auth/hashers.py allows remote attackers to\n    enumerate users via a timing attack involving login requests.\n\n    The intcomma template filter is subject to a potential denial-of-service\n    attack when used with very long strings.\n\n    The django.contrib.auth.forms.UsernameField is subject to a potential\n    denial-of-service attack via certain inputs with a very large number of\n    Unicode characters (because the NFKC normalization is slow on Windows).\n</pre>\n"
                    ),
                ),
                ("reporter", models.CharField(blank=True, max_length=1024)),
                (
                    "release",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.securityrelease",
                    ),
                ),
                (
                    "attack_type",
                    models.CharField(
                        choices=[
                            ("Context-dependent", "Context-dependent"),
                            ("Local", "Local"),
                            ("Physical", "Physical"),
                            ("Remote", "Remote"),
                            ("Other", "Other"),
                        ],
                        default="Remote",
                        max_length=1024,
                    ),
                ),
                (
                    "impact",
                    models.CharField(
                        choices=[
                            ("Code Execution", "Code Execution"),
                            ("Denial of Service", "Denial of Service"),
                            ("Escalation of Privileges", "Escalation of Privileges"),
                            ("Information Disclosure", "Information Disclosure"),
                            ("Other", "Other"),
                        ],
                        default="Denial of Service",
                        max_length=1024,
                    ),
                ),
                ("blogdescription", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Releaser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key_id", models.CharField(max_length=100)),
                ("key_url", models.URLField()),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BugFixRelease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("when", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "feature_release",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.featurerelease",
                    ),
                ),
                (
                    "releaser",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="generator.releaser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="featurerelease",
            name="releaser",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="generator.releaser",
            ),
        ),
        migrations.AddField(
            model_name="securityrelease",
            name="releaser",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="generator.releaser",
            ),
        ),
        migrations.CreateModel(
            name="Release",
            fields=[
                (
                    "version",
                    models.CharField(max_length=16, primary_key=True, serialize=False),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True,
                        default=datetime.date.today,
                        help_text="Leave blank if the release date isn't know yet, typically if you're creating the final release just after the alpha because you want to build docs for the upcoming version.",
                        null=True,
                        verbose_name="Release date",
                    ),
                ),
                (
                    "eol_date",
                    models.DateField(
                        blank=True,
                        help_text="Leave blank if the end of life date isn't known yet, typically because it depends on the release date of a later version.",
                        null=True,
                        verbose_name="End of life date",
                    ),
                ),
                ("major", models.PositiveSmallIntegerField(editable=False)),
                ("minor", models.PositiveSmallIntegerField(editable=False)),
                ("micro", models.PositiveSmallIntegerField(editable=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("a", "alpha"),
                            ("b", "beta"),
                            ("c", "release candidate"),
                            ("f", "final"),
                        ],
                        editable=False,
                        max_length=1,
                    ),
                ),
                ("iteration", models.PositiveSmallIntegerField(editable=False)),
                (
                    "is_lts",
                    models.BooleanField(
                        default=False,
                        help_text='Is this an (<abbr title="Long Term Support">LTS</abbr>) release?',
                        verbose_name="Long Term Support",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bugfixrelease",
            name="release",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="generator.release",
            ),
        ),
        migrations.AddField(
            model_name="featurerelease",
            name="release",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="generator.release",
            ),
        ),
        migrations.AddField(
            model_name="securityissue",
            name="commit_hash_main",
            field=models.CharField(
                blank=True, db_index=True, default="", max_length=128
            ),
        ),
        migrations.CreateModel(
            name="SecurityIssueReleasesThrough",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "commit_hash",
                    models.CharField(
                        blank=True, db_index=True, default="", max_length=128
                    ),
                ),
                (
                    "release",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.release",
                    ),
                ),
                (
                    "securityissue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.securityissue",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="securityissue",
            name="releases",
            field=models.ManyToManyField(
                through="generator.SecurityIssueReleasesThrough", to="generator.release"
            ),
        ),
        migrations.AddConstraint(
            model_name="securityissuereleasesthrough",
            constraint=models.UniqueConstraint(
                fields=("securityissue", "release"), name="unique_securityissue_release"
            ),
        ),
        migrations.AddConstraint(
            model_name="securityissuereleasesthrough",
            constraint=models.UniqueConstraint(
                condition=models.Q(("commit_hash", ""), _negated=True),
                fields=("commit_hash",),
                name="unique_non_empty_commit_hash",
            ),
        ),
        migrations.CreateModel(
            name="PreRelease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("when", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("verbose_version", models.CharField(max_length=100)),
                (
                    "feature_release",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.featurerelease",
                    ),
                ),
                (
                    "release",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="generator.release",
                    ),
                ),
                (
                    "releaser",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="generator.releaser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="featurerelease",
            name="eol_release",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="generator.release",
            ),
        ),
        migrations.AddField(
            model_name="featurerelease",
            name="eom_release",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="generator.release",
            ),
        ),
        migrations.AddField(
            model_name="featurerelease",
            name="highlights",
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name="securityissue",
            name="release",
            field=models.ForeignKey(
                help_text="Security Release that will fix this issue.",
                on_delete=django.db.models.deletion.CASCADE,
                to="generator.securityrelease",
            ),
        ),
        migrations.AlterField(
            model_name="securityissue",
            name="severity",
            field=models.CharField(
                choices=[("low", "Low"), ("moderate", "Moderate"), ("high", "High")],
                default="moderate",
                max_length=128,
            ),
        ),
        migrations.AddField(
            model_name="release",
            name="checksum",
            field=models.FileField(
                blank=True,
                verbose_name="Signed checksum as a .asc file",
            ),
        ),
        migrations.AddField(
            model_name="release",
            name="is_active",
            field=models.BooleanField(
                default=False,
                help_text="Set this release as active. A release is considered active only if its date is today or in the past and this flag is enabled. Enable this flag when the release is available on PyPI.",
            ),
        ),
        migrations.AddField(
            model_name="release",
            name="tarball",
            field=models.FileField(
                blank=True,
                verbose_name="Tarball artifact as a .tar.gz file",
            ),
        ),
        migrations.AddField(
            model_name="release",
            name="wheel",
            field=models.FileField(
                blank=True,
                verbose_name="Wheel artifact as a .whl file",
            ),
        ),
        migrations.AlterField(
            model_name="release",
            name="is_lts",
            field=models.BooleanField(
                default=False,
                help_text='Is this a release for an <abbr title="Long Term Support">LTS</abbr> Django version (e.g. 5.2a1, 5.2, 5.2.4)?',
                verbose_name="Long Term Support",
            ),
        ),
    ]
